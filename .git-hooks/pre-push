#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

./gradlew testNcgDebugUnitTest testNhsDebugUnitTest
TEST_RESULT=$?

if ! [[ "$TEST_RESULT" =~ 0 ]]; then
    echo "UNIT TESTS FAILED"
    exit 1
fi

./gradlew connectedNcgDebugAndroidTest connectedNhsDebugAndroidTest
TEST_RESULT=$?

if ! [[ "$TEST_RESULT" =~ 0 ]]; then
    echo "INTEGRATION TESTS FAILED"
    exit 1
fi

./gradlew lint
LINT_RESULT=$?
if ! [[ "$LINT_RESULT" =~ 0 ]]; then
    echo "LINT ERROR"
    exit 1
fi